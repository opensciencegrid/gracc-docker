version: '2'
services:
    gracc-collector:
        image: retzkek/gracc-collector:1.1.5
        environment:
            - GRACC_LOGLEVEL=info
            - GRACC_AMQP_EXCHANGE=gracc.${GRACC_STREAM}.raw
            - GRACC_AMQP_HOST=${AMQP_HOST}
            - GRACC_AMQP_PORT=${AMQP_PORT}
            - GRACC_AMQP_SCHEME=${AMQP_SCHEME}
            - GRACC_AMQP_USER=${AMQP_USER}
            - GRACC_AMQP_PASSWORD=${AMQP_PASSWORD}
            - GRACC_AMQP_VHOST=${AMQP_VHOST}
            - GRACC_AMQP_FORMAT=json
            - GRACC_AMQP_AUTODELETE=false
            - GRACC_AMQP_DURABLE=true
        # >>> enable pprof for debugging:
        command:
            - /usr/bin/gracc-collector
            - -pprof=:8081
        ports:
            - ${GRACC_HOST_PORT}:8080
            - localhost:1${GRACC_HOST_PORT}:8081
        # ---
        #ports:
        #    - ${GRACC_HOST_PORT}:8080
        # <<<
        network_mode: bridge
        restart: always
        mem_limit: 500M
    gracc-stash-raw:
        image: opensciencegrid/gracc-stash-raw:3.3.1
        env_file:
            - .env
        environment:
            - AMQP_SSL=true
        network_mode: host
        restart: always
    gracc-stash-summary:
        image: retzkek/gracc-stash-summary:3.1
        env_file:
            - .env
        environment:
            - AMQP_SSL=true
        network_mode: host
        restart: always
    gracc-request:
        image: opensciencegrid/gracc-request:v3.7.2
        volumes:
        - ./gracc-request.toml:/etc/graccreq/config.d/gracc-request.toml 
        command: /usr/bin/graccreq -c /etc/graccreq/config.d/gracc-request.toml
        restart: always
        network_mode: host
    logstash-glidein:
        image: docker.elastic.co/logstash/logstash:5.5.1
        volumes:
        - ./glidein-logs-logstash.conf:/usr/share/logstash/pipeline/glidein-logs-logstash.conf
        network_mode: host
        restart: always
        ports:
            - 5044


